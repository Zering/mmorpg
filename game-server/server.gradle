
group = "com.kingston.mmorpg.game"
archivesBaseName = 'game'

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'


buildscript {
    repositories {
        jcenter()
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
    }
}

dependencies {
	compile(project(":game-common"))
	
	compile  'org.projectlombok:lombok:1.16.12'	
	
	compile 'com.google.code.gson:gson'

	compile 'io.netty:netty-all'
	
	compile 'mysql:mysql-connector-java'	
	
	compile 'org.apache.commons:commons-lang3'	
	
	compile 'org.codehaus.groovy:groovy-all'
	
	compile ('org.springframework.boot:spring-boot-starter-data-jpa')
	
	testCompile ('org.springframework.boot:spring-boot-starter-test')
	
	compile ('org.springframework.boot:spring-boot-starter-actuator')
	
	compile ('org.springframework.boot:spring-boot-starter-web')
	
	compile ('org.springframework.boot:spring-boot-devtools')

    compile ('org.springframework.boot:spring-boot-starter-cache')

    compile ('net.sf.ehcache:ehcache')
	
	
	compile fileTree(dir:'libs',include:['*.jar'])
}


sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "env/$profile"]
        }
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')
}

task copyConfigs(type: Copy) {
    from 'src/main/resources/server.properties'
    into('build/libs/configs')
}


bootJar {
	//configurations.runtime.each { println it.path }
    baseName = 'mmorpg'
    version = '1.1.0'
    manifest {
        attributes "Manifest-Version": 1.0,
                   'Start-Class': 'com.kingston.mmorpg.ServerStartup',
                   // 'Spring-Boot-Classes': 'lib',
                   "Class-Path":"configs/ " + configurations.runtime.collect { "lib/${it.name}" }.join(' ')
    }

	//enabled = true

    excludes = ['server.properties', "*.jar"]

    dependsOn clearJar
    dependsOn copyJar
    dependsOn copyConfigs

}



// task release(type: Copy, dependsOn: [build, clearJar, copyJar, copyConfigs]) {

// }